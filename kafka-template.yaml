apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: cfk
spec:
  replicas: 3
  image:
    application: confluentinc/cp-zookeeper:7.0.1
    init: confluentinc/confluent-init-container:2.2.0-1
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  authentication:
    type: digest
    jaasConfig:
      secretRef: zookeeper-listener
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: cfk
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:7.0.1
    init: confluentinc/confluent-init-container:2.2.0-1
  dataVolumeCapacity: 30Gi
  metricReporter:
    authentication:
      jaasConfig:
        secretRef: metric-credentials
      type: plain
    enabled: true
    tls:
      enabled: true
  tls:
    autoGeneratedCerts: true
  listeners:
    internal: 
      authentication:
        type: plain
        jaasConfig:
          secretRef: kafka-listener
      tls:
        enabled: true
    external:
      externalAccess:
        type: route
        route:
          domain: 
      authentication:
        type: plain
        jaasConfig:
          secretRef: kafka-listener
      tls:
        enabled: true
  dependencies:
    zookeeper:
      endpoint: zookeeper:2182
      authentication:
        type: digest
        jaasConfig:
          secretRef: kafka-zookeeper
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: cfk
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.0.1
    init: confluentinc/confluent-init-container:2.2.0-1
  tls:
    autoGeneratedCerts: true
  externalAccess:
    type: route
    route:
      domain: 
  dependencies:
    kafka:
      bootstrapEndpoint: 
      authentication:
        type: plain
        jaasConfig:
          secretRef: sr-kafka
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: cfk
spec:
  replicas: 1
  image:
    application: confluentinc/cp-ksqldb-server:7.0.1
    init: confluentinc/confluent-init-container:2.2.0-1
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: 
      authentication:
        type: plain
        jaasConfig:
          secretRef: ksql-kafka
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: cfk
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server-connect:7.0.1
    init: confluentinc/confluent-init-container:2.2.0-1
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: connect-kafka
      tls:
        enabled: true
  tls:
    autoGeneratedCerts: true
  externalAccess:
    type: route
    route:
      domain: 
  build:
    type: onDemand
    onDemand:
      plugins:
        locationType: confluentHub
        confluentHub:
          - name: kafka-connect-jdbc
            owner: confluentinc
            version: 10.2.6
          - name: kafka-connect-ibmmq
            owner: confluentinc
            version: 11.0.10
          - name: kafka-connect-ibmmq-sink
            owner: confluentinc
            version: 2.0.0
          - name: kafka-connect-elasticsearch
            owner: confluentinc
            version: 11.1.6
      storageLimit: 10G
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: cfk
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.0.1
    init: confluentinc/confluent-init-container:2.2.0-1
  dataVolumeCapacity: 10Gi
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: metric-credentials
      tls:
        enabled: true
    schemaRegistry:
      url: 
      tls:
        enabled: true
    ksqldb:
      - name: ksqldb
        url: 
        tls:
          enabled: true
    connect:
      - name: connect
        url: 
        tls:
          enabled: true
  tls:
    autoGeneratedCerts: true
  externalAccess:
    type: route
    route:
      domain: 
  authentication:
    type: basic
    basic:
      secretRef: c3-user
